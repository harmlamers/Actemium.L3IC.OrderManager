<?xml version="1.0" encoding="utf-8"?>
<Code_Generation xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <DataObjectList>
    <Data_Objects>
      <DataObject>
        <Name>DataTypes</Name>
        <Description />
        <Type>table</Type>
        <Schema>ACT</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>DataTypeId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Name</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Description</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>100</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>NameAbbreviationStyle</Name>
        <Description />
        <Type>table</Type>
        <Schema>ACT</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>NameAbbreviationStyleId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Name</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Description</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>100</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>ApplicationSettings</Name>
        <Description />
        <Type>table</Type>
        <Schema>AS</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>ApplicationSettingId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>ApplicationSettingsCategoryId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName>AS</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>ApplicationSettingsCategories</RefObjectName>
            <RefAttributeName>ApplicationSettingsCategoryId</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>Name</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>100</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Description</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>100</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>DataTypeId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName>ACT</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>DataTypes</RefObjectName>
            <RefAttributeName>DataTypeId</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>Value</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>MAX</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>ListId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName>AS</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>DataSource</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>ApplicationSettingsCategories</Name>
        <Description />
        <Type>table</Type>
        <Schema>AS</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>ApplicationSettingsCategoryId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Name</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>100</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Description</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>100</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>DataSource</Name>
        <Description />
        <Type>table</Type>
        <Schema>AS</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>true</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>ListName</Name>
            <Description />
            <DataBaseType>varchar</DataBaseType>
            <DotNetType>varchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Object_Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Key_Column_Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Value_Column_Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>ApplicationTranslations</Name>
        <Description />
        <Type>table</Type>
        <Schema>AT</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>true</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Key</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>SubKey</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>100</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>LanguageId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName>AT</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Languages</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>Value</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>MAX</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>ApplicationTranslationsHistory</Name>
        <Description />
        <Type>table</Type>
        <Schema>AT</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>true</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>TranslationId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Key</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>SubKey</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>100</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>LanguageId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Value</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>MAX</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Modified_On</Name>
            <Description />
            <Type>DateTime</Type>
            <DataBaseType>datetime</DataBaseType>
            <DotNetType>datetime</DotNetType>
            <TypeLength>8</TypeLength>
            <Precision>23</Precision>
            <Scale>3</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Column_Updated_BitMask</Name>
            <Description />
            <DataBaseType>varchar</DataBaseType>
            <DotNetType>varchar</DotNetType>
            <TypeLength>15</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>ApplicationTranslationsUpdatedOn</Name>
        <Description />
        <Type>table</Type>
        <Schema>AT</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>true</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Date</Name>
            <Description />
            <Type>DateTime</Type>
            <DataBaseType>datetime</DataBaseType>
            <DotNetType>datetime</DotNetType>
            <TypeLength>8</TypeLength>
            <Precision>23</Precision>
            <Scale>3</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>Languages</Name>
        <Description />
        <Type>table</Type>
        <Schema>AT</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>true</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Name</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>CultureName</Name>
            <Description />
            <DataBaseType>nchar</DataBaseType>
            <DotNetType>nchar</DotNetType>
            <TypeLength>10</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Image</Name>
            <Description />
            <Type>ByteArray</Type>
            <DataBaseType>varbinary</DataBaseType>
            <DotNetType>varbinary</DotNetType>
            <TypeLength>MAX</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>__RefactorLog</Name>
        <Description>refactoring log</Description>
        <Type>table</Type>
        <Schema>dbo</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>OperationKey</Name>
            <Description />
            <Type>Guid</Type>
            <DataBaseType>uniqueidentifier</DataBaseType>
            <DotNetType>uniqueidentifier</DotNetType>
            <TypeLength>16</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>HistoryActions</Name>
        <Description />
        <Type>table</Type>
        <Schema>HIST</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>HistoryActionId</Name>
            <Description />
            <Type>Int64</Type>
            <DataBaseType>bigint</DataBaseType>
            <DotNetType>bigint</DotNetType>
            <TypeLength>8</TypeLength>
            <Precision>19</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>true</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>HistoryKey</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>100</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName>HIST</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>HistoryKeys</RefObjectName>
            <RefAttributeName>HistoryKey</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>TimeStampUTC</Name>
            <Description />
            <Type>DateTime</Type>
            <DataBaseType>datetime</DataBaseType>
            <DotNetType>datetime</DotNetType>
            <TypeLength>8</TypeLength>
            <Precision>23</Precision>
            <Scale>3</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>UserId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Users</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>ComputerId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Computers</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>Parameters</Name>
            <Description />
            <DataBaseType>xml</DataBaseType>
            <DotNetType>xml</DotNetType>
            <TypeLength>MAX</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>HistoryKeys</Name>
        <Description />
        <Type>table</Type>
        <Schema>HIST</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>HistoryKey</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>100</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>ShowInClient</Name>
            <Description />
            <Type>Boolean</Type>
            <DataBaseType>bit</DataBaseType>
            <DotNetType>bit</DotNetType>
            <TypeLength>1</TypeLength>
            <Precision>1</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>SaveInDatabase</Name>
            <Description />
            <Type>Boolean</Type>
            <DataBaseType>bit</DataBaseType>
            <DotNetType>bit</DotNetType>
            <TypeLength>1</TypeLength>
            <Precision>1</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>TraceLevel</Name>
            <Description>System.Diagnostics.SourceLevels excluding ActivityTracing and All</Description>
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>100</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>AccessControlItems</Name>
        <Description />
        <Type>table</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>true</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Category</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Action</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>ComputerAccessControlLists</Name>
        <Description />
        <Type>table</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>AccessControlListId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>AccessControlItems</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>ComputerId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Computers</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>ComputerPropertyValues</Name>
        <Description />
        <Type>table</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>PropertyId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Properties</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>ComputerId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Computers</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>Value</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>200</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>Computers</Name>
        <Description />
        <Type>table</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>true</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>HostName</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Description</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>255</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>ACIManaged</Name>
            <Description />
            <Type>Boolean</Type>
            <DataBaseType>bit</DataBaseType>
            <DotNetType>bit</DotNetType>
            <TypeLength>1</TypeLength>
            <Precision>1</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>GroupAccessControlLists</Name>
        <Description />
        <Type>table</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>AccessControlListId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>AccessControlItems</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>GroupId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Groups</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>GroupPropertyValues</Name>
        <Description />
        <Type>table</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>PropertyId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Properties</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>GroupId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Groups</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>Value</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>200</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>Groups</Name>
        <Description />
        <Type>table</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>true</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Name</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Description</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>255</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>DomainGroupIdentifier</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>255</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>Properties</Name>
        <Description />
        <Type>table</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Name</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>DefaultValue</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>200</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Type</Name>
            <Description>0=GeneralSetting, 1=User, 2=Group, 3=Computer</Description>
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>DataType</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>SessionLogging</Name>
        <Description />
        <Type>table</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>true</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>UserId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Users</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>ComputerId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Computers</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>HostComputerName</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>ClientComputerName</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Starttime</Name>
            <Description />
            <Type>DateTime</Type>
            <DataBaseType>datetime</DataBaseType>
            <DotNetType>datetime</DotNetType>
            <TypeLength>8</TypeLength>
            <Precision>23</Precision>
            <Scale>3</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Endtime</Name>
            <Description />
            <Type>DateTime</Type>
            <DataBaseType>datetime</DataBaseType>
            <DotNetType>datetime</DotNetType>
            <TypeLength>8</TypeLength>
            <Precision>23</Precision>
            <Scale>3</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>LastActivity</Name>
            <Description />
            <Type>DateTime</Type>
            <DataBaseType>datetime</DataBaseType>
            <DotNetType>datetime</DotNetType>
            <TypeLength>8</TypeLength>
            <Precision>23</Precision>
            <Scale>3</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>UserAccessControlLists</Name>
        <Description />
        <Type>table</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>AccessControlListId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>AccessControlItems</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>UserId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Users</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>UserGroupLists</Name>
        <Description />
        <Type>table</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>UserId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Users</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>GroupId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Groups</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>UserPropertyValues</Name>
        <Description />
        <Type>table</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>PropertyId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Properties</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>UserId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>true</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName>UM</RefSchemaName>
            <RefSchemaDescription />
            <RefObjectName>Users</RefObjectName>
            <RefAttributeName>Id</RefAttributeName>
          </DataAttribute>
          <DataAttribute>
            <Name>Value</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>200</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>Users</Name>
        <Description />
        <Type>table</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>Id</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>true</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>true</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Username</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Password</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>200</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Name</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>25</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>SurName</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>25</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>AccountType</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>IsActive</Name>
            <Description />
            <Type>Boolean</Type>
            <DataBaseType>bit</DataBaseType>
            <DotNetType>bit</DotNetType>
            <TypeLength>1</TypeLength>
            <Precision>1</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>ViewComputerPropertyValues</Name>
        <Description />
        <Type>view</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>PropertyId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Name</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>DefaultValue</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>200</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>DataType</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>ComputerId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Value</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>200</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>ViewGroupPropertyValues</Name>
        <Description />
        <Type>view</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>PropertyId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Name</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>DefaultValue</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>200</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>DataType</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>GroupId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Value</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>200</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
      <DataObject>
        <Name>ViewUserPropertyValues</Name>
        <Description />
        <Type>view</Type>
        <Schema>UM</Schema>
        <SchemaDescription />
        <DataAttributes>
          <DataAttribute>
            <Name>PropertyId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Name</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>50</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>DefaultValue</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>200</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>DataType</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>false</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>UserId</Name>
            <Description />
            <Type>Int32</Type>
            <DataBaseType>int</DataBaseType>
            <DotNetType>int</DotNetType>
            <TypeLength>4</TypeLength>
            <Precision>10</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
          <DataAttribute>
            <Name>Value</Name>
            <Description />
            <DataBaseType>nvarchar</DataBaseType>
            <DotNetType>nvarchar</DotNetType>
            <TypeLength>200</TypeLength>
            <Precision>0</Precision>
            <Scale>0</Scale>
            <NullAllowed>true</NullAllowed>
            <IdentityColumn>false</IdentityColumn>
            <ReadOnly>false</ReadOnly>
            <ForeignKey>false</ForeignKey>
            <PrimaryKey>false</PrimaryKey>
            <RefSchemaName />
            <RefSchemaDescription />
            <RefObjectName />
            <RefAttributeName />
          </DataAttribute>
        </DataAttributes>
      </DataObject>
    </Data_Objects>
  </DataObjectList>
  <TemplateList>
    <Templates>
      <Template>
        <Name>Actemium.ApplicationSettings.Business</Name>
        <FullName>D:\TFS\BU00\Modules\Actemium.EmptyClient\dev\Actemium.ApplicationSettings\Gennie\Templates\Actemium.ApplicationSettings.Business.template</FullName>
        <Language>CSharp</Language>
        <Text>&lt;%
// Define the name the outputcode should be written to
//outputFile.PathName += (@"\Business\" + dataObject.Schema );
outputFile.PathName += (@"\Actemium.ApplicationSettings.Business\Gennie" );
outputFile.FileName = dataObject.Name + ".Gennie.cs";

// generation variable declarations
//String schemaNamespace = dataObject.Schema != "dbo" ? dataObject.Schema + "." : "";
String schemaNamespace = "";

bool readOnly = false;
  if ((project["readOnly"] == "1") || (project["readOnly"].ToLower() == "true"))
    readOnly = true;

 AttributeCollection primaryKeys = dataObject.GetAll(DataAttributeField.PrimaryKey);

 string placeHolders = "";
 string parameters = "";

for(int i=0; i&lt;primaryKeys.Count; i++)
{
    DataAttribute attribute = primaryKeys[i];
    placeHolders += "{" + i.ToString() + "}";
    parameters += GennieHelper.CamelCase(attribute.Name, true, true);
    if (i &lt; primaryKeys.Count-1)
    {
        placeHolders += ",";
        parameters += ",";
    }
}
%&gt;using System;
using System.Collections.Generic;
using Actemium.Data.Exceptions;
using Actemium.Diagnostics;
using Actemium.UserManagement2.Business;

namespace &lt;%=project["root-namespace"]%&gt;.&lt;%=schemaNamespace%&gt;Business
{
	/// &lt;summary&gt;
	/// Business class for &lt;%=dataObject.Name%&gt; (Generated by Gennie).
&lt;%if (dataObject.Description != null &amp;&amp; dataObject.Description.Length &gt; 0 &amp;&amp; dataObject.Type != "view"){%&gt;	/// Description: &lt;%=dataObject.Description%&gt;
&lt;%}%&gt;	/// &lt;/summary&gt;
	public sealed partial class &lt;%=dataObject.Name%&gt; : &lt;%=dataObject.Name%&gt;Gennie
	{
		private const string CLASSNAME = "&lt;%=schemaNamespace%&gt;Business.&lt;%=dataObject.Name%&gt;";

		&lt;% // SLP: http://msdn.microsoft.com/en-us/library/ee817670.aspx
		//Make the constuctor private, so the instance is allways called..
		//private &lt;%=dataObject.Name%&gt;() { } %&gt;
		public static readonly &lt;%=dataObject.Name%&gt; Instance = new &lt;%=dataObject.Name%&gt;();
	}

	/// &lt;summary&gt;
	/// Business class for &lt;%=dataObject.Name%&gt;Gennie (Generated by Gennie).
	/// &lt;/summary&gt;
	public abstract class &lt;%=dataObject.Name%&gt;Gennie
	{
		private const string CLASSNAME = "&lt;%=schemaNamespace%&gt;Business.&lt;%=dataObject.Name%&gt;Gennie";
		
&lt;%  if (dataObject.Type != "view" &amp;&amp; !readOnly)
{ %&gt;&lt;%
            AttributeCollection identities = dataObject.GetAll(DataAttributeField.IdentityColumn);
            string returnType = "void";
            if (identities.Count == 1)
            {
                returnType = identities[0].Type.ToString();
            }
%&gt; 		/// &lt;summary&gt;
		/// Add a new &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; to the database
		/// &lt;/summary&gt;
&lt;%          Output.Write(string.Format("\t\tpublic virtual {0} Add(Model.{1} new{1})", returnType, GennieHelper.Singularity(dataObject.Name)));
        %&gt;
		{
			try
			{
				Trace.WriteInformation("({0})", "Add", CLASSNAME, new&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);

				CheckConstraints(new&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);
				DataAccess.&lt;%=dataObject.Name%&gt; &lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt; = new DataAccess.&lt;%=dataObject.Name%&gt;();

        &lt;%if (identities.Count == 1)
        {
          Output.Write("return ");
        }
        %&gt;&lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt;.Add(new&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);
			}
			catch (DalForeignKeyException ex_fk)
      {
        Trace.WriteError("({0})", "Add", CLASSNAME, ex_fk, new&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);
        throw new BusinessException(string.Format("No related object found in {0}", ex_fk.Table), ex_fk);
      }
			catch (Exception ex)
			{
				Trace.WriteError("({0})", "Add", CLASSNAME, ex, new&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);
				throw;
			}
		}


		/// &lt;summary&gt;
		/// Check Datafield constraints
		/// &lt;/summary&gt;
		protected virtual void CheckConstraints(Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; &lt;%=GennieHelper.CamelCase(GennieHelper.Singularity(dataObject.Name))%&gt;)
		{
			//Range checks, etc checks go here
&lt;%		foreach (DataAttribute attribute in dataObject)
			{
				switch(attribute.Type)
				{
					case DataAttribute.DotNetTypeEnum.String:
						if (attribute.TypeLength.ToUpper() != "MAX")
						{

						  if (!attribute.NullAllowed)
						  {			  
						    Output.Write(string.Format("			if ({0}.{1} == null)", GennieHelper.CamelCase(GennieHelper.Singularity(dataObject.Name)), GennieHelper.PascalCase(attribute.Name, true,true)));			    
							Output.WriteLine();			
							Output.WriteLine(string.Format("			  throw new BusinessException(string.Format(\"{0} may not be NULL. ({{0}})\", {1}.{0}));",
													 GennieHelper.PascalCase( attribute.Name, true,true ),
													 GennieHelper.CamelCase(GennieHelper.Singularity(dataObject.Name))));	
							Output.WriteLine();																	    					    
						  }

						  if (attribute.NullAllowed)
						    Output.Write(string.Format("			if ({0}.{1} != null &amp;&amp; {0}.{1}.Length &gt; {2})", GennieHelper.CamelCase(GennieHelper.Singularity(dataObject.Name)), GennieHelper.PascalCase(attribute.Name, true,true), attribute.TypeLength));
						  else
						    Output.Write(string.Format("			if ({0}.{1}.Length &gt; {2})", GennieHelper.CamelCase(GennieHelper.Singularity(dataObject.Name)), GennieHelper.PascalCase(attribute.Name, true,true), attribute.TypeLength));
						  
						  Output.WriteLine();			
						  Output.WriteLine(string.Format("			  throw new BusinessException(string.Format(\"{0} may not be longer than {1} characters. ({{0}})\", {2}.{0}));",
							           GennieHelper.PascalCase( attribute.Name, true,true ),
							           attribute.TypeLength,
							           GennieHelper.CamelCase(GennieHelper.Singularity(dataObject.Name))));
						  Output.WriteLine();
						}
						break;
				}
			}
%&gt;		}

&lt;%      if (primaryKeys.Count &gt; 0 &amp;&amp; !readOnly)
        {%&gt;
		/// &lt;summary&gt;
		/// Delete the given &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; from the database
		/// &lt;/summary&gt;
		public virtual void Delete(Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; del&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;)
		{
			try
			{
				Trace.WriteInformation("({0})", "Delete", CLASSNAME, del&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);

				//Begin Checks
				if (!Exists(del&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;))
					throw new BusinessException(string.Format("There is no &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; with this id. ({0})", del&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;));

				DataAccess.&lt;%=dataObject.Name%&gt; &lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt; = new DataAccess.&lt;%=dataObject.Name%&gt;();
				&lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt;.Delete(del&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);
			}
			catch (DalForeignKeyException ex_fk)
      {
        Trace.WriteError("({0})", "Delete", CLASSNAME, ex_fk, del&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);
        throw new BusinessException(string.Format("The &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; is still used by {0}", ex_fk.Table), ex_fk);
      }
			catch (Exception ex)
			{
				Trace.WriteError("({0})", "Delete", CLASSNAME, ex, del&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);
				throw;
			}
		}
&lt;% }  %&gt;
&lt;%      if ((primaryKeys.Count &gt; 0) &amp;&amp; (dataObject.Count &gt; primaryKeys.Count) &amp;&amp; !readOnly)
        {%&gt;
		/// &lt;summary&gt;
		/// Modify the given &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; in the database
		/// &lt;/summary&gt;
		public virtual void Modify(Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;)
		{
			try
			{
				Trace.WriteInformation("({0})", "Modify", CLASSNAME, modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);

				//Begin Checks
				CheckConstraints(modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);

				if (!Exists(modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;))
					throw new BusinessException(string.Format("There is no &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; with this id. ({0})", modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;));

				DataAccess.&lt;%=dataObject.Name%&gt; &lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt; = new DataAccess.&lt;%=dataObject.Name%&gt;();
				&lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt;.Modify(modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);
			}
			catch (Exception ex)
			{
				Trace.WriteError("({0})", "Modify", CLASSNAME, ex, modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);
				throw;
			}
		}
		
		/// &lt;summary&gt;
		/// Modify only the specified properties of the &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; 
		/// specified by:
		/// &lt;/summary&gt;
		&lt;%

		for(int i=0; i&lt;primaryKeys.Count; i++)
    {
	    DataAttribute attribute = primaryKeys[i];
	    %&gt;/// &lt;param name="&lt;%=GennieHelper.CamelCase(attribute.Name, true, true)%&gt;"&gt;PK&lt;/param&gt;&lt;%
	      }%&gt;
	    /// &lt;param name="propValues"&gt;Properties to change&lt;/param&gt;
		public virtual void Modify(&lt;%
		
		for(int i=0; i&lt;primaryKeys.Count; i++)
		{
			DataAttribute attribute = primaryKeys[i];
			%&gt;&lt;%=attribute.Type%&gt; &lt;%=GennieHelper.CamelCase(attribute.Name, true, true)%&gt;, &lt;%
	      }%&gt; params KeyValuePair&lt;string,object&gt;[] propValues)
		{
			try
			{
				Trace.WriteInformation("(&lt;%=placeHolders%&gt;, {&lt;%=primaryKeys.Count%&gt;})", "Modify", CLASSNAME, &lt;%=parameters%&gt;, string.Join(",", propValues));

				DataAccess.&lt;%=dataObject.Name%&gt; &lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt; = new DataAccess.&lt;%=dataObject.Name%&gt;();
				&lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt;.Modify(
				&lt;%
		for(int i=0; i&lt;primaryKeys.Count; i++)
		{
			DataAttribute attribute = primaryKeys[i];
			%&gt;&lt;%=GennieHelper.CamelCase(attribute.Name, true, true)%&gt;, &lt;%
	      }%&gt;
				propValues);
				return;
			}
			catch (Exception ex)
			{
				Trace.WriteError("(&lt;%=placeHolders%&gt;)", "Modify", CLASSNAME, ex, &lt;%=parameters%&gt;);
				throw;
			}
		}
&lt;%  }

  }  %&gt;

		/// &lt;summary&gt;
		/// Get all &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; records from the database
		/// &lt;/summary&gt;
		public virtual List&lt;Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;&gt; GetAll()
		{
			try
			{
				DataAccess.&lt;%=dataObject.Name%&gt; &lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt; = new DataAccess.&lt;%=dataObject.Name%&gt;();
				List&lt;Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;&gt; result = &lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt;.GetAll();

				return result;
			}
			catch (Exception ex)
			{
				Trace.WriteError("()", "GetAll", CLASSNAME, ex);
				throw;
			}
		}
&lt;% if (dataObject.Type != "view")  { %&gt;
&lt;%   if (primaryKeys.Count &gt; 0)     {%&gt;
		/// &lt;summary&gt;
		/// Get a &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; by id from the database
		/// &lt;/summary&gt;
		public virtual Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; GetById(&lt;%

		for(int i=0; i&lt;primaryKeys.Count; i++)
    {
	    DataAttribute attribute = primaryKeys[i];
	    %&gt;&lt;%=attribute.Type%&gt; &lt;%=GennieHelper.CamelCase(attribute.Name, true, true)%&gt;&lt;%
		    if (i &lt; primaryKeys.Count-1){ %&gt; ,&lt;% }
	      }%&gt;)
		{
		  try
			{
		    DataAccess.&lt;%=dataObject.Name%&gt; &lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt; = new DataAccess.&lt;%=dataObject.Name%&gt;();
				Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; result = &lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt;.GetById(&lt;%
          for(int i=0; i&lt;primaryKeys.Count; i++)
          {
	          DataAttribute attribute = primaryKeys[i];
	          %&gt;&lt;%=GennieHelper.CamelCase(attribute.Name, true, true)
	          %&gt;&lt;%if (i &lt; primaryKeys.Count -1)
		          {%&gt;, &lt;%} }%&gt;);
			  return result;
			}
			catch (Exception ex)
			{
			  Trace.WriteError("&lt;%=placeHolders%&gt;", "GetById", CLASSNAME, ex, &lt;%=parameters%&gt;);
			  throw;
			}
		}
&lt;% }  //end  if (primaryKeys.Count &gt; 0)%&gt;
&lt;%foreach(DataAttribute attribute in dataObject.GetAll(DataAttributeField.ForeignKey))
{
	string methodName = "GetBy" + GennieHelper.PascalCase(attribute.Name, true, true);
	string argName = GennieHelper.CamelCase(attribute.Name, true, true);%&gt;
		/// &lt;summary&gt;
		/// Get a &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; by &lt;%=GennieHelper.RemoveHungarianPrefix(attribute.Name)%&gt; from the database
		/// &lt;/summary&gt;
		public virtual List&lt;Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;&gt; &lt;%=methodName%&gt;(&lt;%=attribute.Type%&gt; &lt;%=argName%&gt;)
		{
			try
			{
				DataAccess.&lt;%=dataObject.Name%&gt; &lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt; = new DataAccess.&lt;%=dataObject.Name%&gt;();
				List&lt;Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;&gt; result = &lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt;.&lt;%=methodName%&gt;(&lt;%=argName%&gt;);

				return result;
			}
			catch (Exception ex)
			{
				Trace.WriteError("({0})", "&lt;%=methodName%&gt;", CLASSNAME, ex, &lt;%=argName%&gt;);
				throw;
			}
		}
&lt;%}%&gt;
&lt;%     if (primaryKeys.Count &gt; 0)  {%&gt;
		/// &lt;summary&gt;
		/// Equals function to compare class
		/// &lt;/summary&gt; 
		public virtual bool Exists(Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; &lt;%=GennieHelper.CamelCase(GennieHelper.Singularity(dataObject.Name))%&gt;)
		{
		  try
			{
				return (this.GetById(&lt;%
          for(int i=0; i&lt;primaryKeys.Count; i++)
          {
				    DataAttribute attribute = primaryKeys[i];
				%&gt;&lt;%=GennieHelper.CamelCase(GennieHelper.Singularity(dataObject.Name))%&gt;.&lt;%=GennieHelper.PascalCase(attribute.Name, true,true)%&gt;&lt;%
				    if (i &lt; primaryKeys.Count -1)
				    {%&gt;,
               &lt;%}
			  }%&gt;) != null);
			}
			catch (Exception ex)
			{
				Trace.WriteError("({0})", "Exists", CLASSNAME, ex, &lt;%=GennieHelper.CamelCase(GennieHelper.Singularity(dataObject.Name))%&gt;);
				throw;
			}
		}


		/// &lt;summary&gt;
		/// Equals function to compare class
		/// &lt;/summary&gt; 
		public virtual bool Exists(&lt;%
		for(int i=0; i&lt;primaryKeys.Count; i++)
    {
	    DataAttribute attribute = primaryKeys[i];
	    %&gt;&lt;%=attribute.Type%&gt; &lt;%=GennieHelper.CamelCase(attribute.Name, true, true)%&gt; &lt;%
		  if (i &lt; primaryKeys.Count-1){ %&gt;,&lt;% }
	    }%&gt;)
		{
		  try
		  {
				DataAccess.&lt;%=dataObject.Name%&gt; &lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt; = new DataAccess.&lt;%=dataObject.Name%&gt;();
				return &lt;%=GennieHelper.CamelCase(dataObject.Name)%&gt;.GetById(&lt;%
          for(int i=0; i&lt;primaryKeys.Count; i++)
          {
				    DataAttribute attribute = primaryKeys[i];
				    %&gt;&lt;%=GennieHelper.CamelCase(attribute.Name, true, true)%&gt;&lt;%
				      if (i &lt; primaryKeys.Count -1)
				      {%&gt;, &lt;%}
				 }%&gt;) != null;
			}
		  catch (Exception ex)
			{
			  Trace.WriteError("&lt;%=placeHolders%&gt;", "Exists", CLASSNAME, ex, &lt;%=parameters%&gt;);
				throw;
			}
		}    
&lt;% }  }  %&gt;
	}
}</Text>
        <Code />
      </Template>
      <Template>
        <Name>Actemium.ApplicationSettings.DataAccess</Name>
        <FullName>D:\TFS\BU00\Modules\Actemium.EmptyClient\dev\Actemium.ApplicationSettings\Gennie\Templates\Actemium.ApplicationSettings.DataAccess.template</FullName>
        <Language>CSharp</Language>
        <Text>&lt;%
    // Define the name the outputcode should be written to
    //outputFile.PathName += (@"\DataAccess\" + dataObject.Schema );
    outputFile.PathName += (@"\Actemium.ApplicationSettings.DataAccess\Gennie" );
    outputFile.FileName = dataObject.Name + ".Gennie.cs";

    bool readOnly = false;
    if ((project["readOnly"] == "1") || (project["readOnly"].ToLower() == "true"))
       readOnly = true;

  	//String schemaNamespace = dataObject.Schema != "dbo" ? dataObject.Schema + "." : "";
  	String schemaNamespace = "";

	DataAttribute identityCol = null; 
	
	String AddParameters = "";
	foreach ( DataAttribute attribute in dataObject)
	{
	    if (AddParameters != "")
	        AddParameters += @",\r\n";
  	    if (attribute.IdentityColumn)
  	    {
		    identityCol = attribute;
		    AddParameters += string.Format("\t\t\t\t\t{0}Param", attribute.Name);
		}
		else
		{
		    AddParameters += string.Format("\t\t\t\t\thelper.CreateInputParam(\"@{0}\", new{1}.{2}", 
					GennieHelper.RemoveHungarianPrefix(attribute.Name), GennieHelper.Singularity(dataObject.Name), GennieHelper.PascalCase( attribute.Name, true,true));
	        if(attribute.NullAllowed)
	        {
	            if (attribute.Type != DataAttribute.DotNetTypeEnum.String)
	            {
	                AddParameters += string.Format(".HasValue ? (object)new{0}.{1} : DBNull.Value", 
	                    GennieHelper.Singularity(dataObject.Name), GennieHelper.PascalCase( attribute.Name, true,true));
	            } 
	            else 
	            {
	                AddParameters += string.Format(" != null ? (object)new{0}.{1} : DBNull.Value",
	                    GennieHelper.Singularity(dataObject.Name), GennieHelper.PascalCase( attribute.Name, true,true));
	            }
	        }
	        AddParameters += ")";
		}
    }
    AddParameters += ");";


    String AddReturnType = "";
    String identityVar = "";
    string returnLine = "";
    if (identityCol == null) 
    {
        AddReturnType = "void";
        returnLine = "return;";
    }
    else
    {
        AddReturnType = identityCol.Type.ToString();
        identityVar = String.Format("\t\t\t\tDbParameter {0}Param = helper.CreateOutputParam(\"@{1}\", DbType.{2});",
                        identityCol.Name, GennieHelper.RemoveHungarianPrefix( identityCol.Name), identityCol.Type);
        returnLine = string.Format("\t\t\t\treturn ({0}){1}Param.Value;", identityCol.Type, identityCol.Name);
    }

    // generation variable declarations

 AttributeCollection primaryKeys = dataObject.GetAll(DataAttributeField.PrimaryKey);

 string placeHolders = "";
 string parameters = "";

for(int i=0; i&lt;primaryKeys.Count; i++)
{
    DataAttribute attribute = primaryKeys[i];
    placeHolders += "{" + i.ToString() + "}";
    parameters += GennieHelper.CamelCase(attribute.Name, true, true);
    if (i &lt; primaryKeys.Count-1)
    {
        placeHolders += ",";
        parameters += ",";
    }
}

%&gt;using System;
using System.Text;
using System.Data;
using System.Data.Common;
using System.Collections.Generic;
using Actemium.Diagnostics;
using Actemium.Data.Common;
using Actemium.Data.Exceptions;

namespace &lt;%=project["root-namespace"]%&gt;.&lt;%=schemaNamespace%&gt;DataAccess
{
	/// &lt;summary&gt;
	/// Data access to the data in table &lt;%=dataObject.Name%&gt; in the database (Generated by Gennie)
&lt;%if (dataObject.Description != null &amp;&amp; dataObject.Description.Length &gt; 0 &amp;&amp; dataObject.Type != "view"){%&gt;	/// Description: &lt;%=dataObject.Description%&gt;
&lt;%}%&gt;	/// &lt;/summary&gt;
	public partial class &lt;%=dataObject.Name%&gt; : &lt;%=dataObject.Name%&gt;Gennie
	{
		private const string CLASSNAME = "&lt;%=schemaNamespace%&gt;DataAccess.&lt;%=dataObject.Name%&gt;";

	}

	/// &lt;summary&gt;
	/// Data access to the data in table &lt;%=dataObject.Name%&gt;Gennie in the database (Generated by Gennie)
	/// &lt;/summary&gt;
	public abstract class &lt;%=dataObject.Name%&gt;Gennie
	{
		private const string CLASSNAME = "&lt;%=schemaNamespace%&gt;DataAccess.&lt;%=dataObject.Name%&gt;Gennie";

&lt;%  if (dataObject.Type != "view" &amp;&amp; !readOnly)
{  %&gt;
		/// &lt;summary&gt;
		/// Add a new &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; to the database
		/// &lt;/summary&gt;
		public virtual &lt;%=AddReturnType%&gt; Add(Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; new&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;)
		{
			try
			{
				Trace.WriteVerbose("({0})", "Add", CLASSNAME, new&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;.ToString());
				var helper = Database.GetDbHelper();
&lt;%=identityVar%&gt;

				int recordsAffected = helper.ExecuteSPNonQuery(_storedProcedure_Add,
&lt;%=AddParameters%&gt;

				if (recordsAffected == 0)
					throw new DalNothingUpdatedException("Unable to add &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; with &lt;%=((dataObject.GetAll( DataAttributeField.PrimaryKey).Count &gt; 0) ? GennieHelper.PascalCase(dataObject.GetAll(  DataAttributeField.PrimaryKey)[0].Name, true,true) : String.Empty)%&gt;={0}", new&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;);

&lt;%=returnLine%&gt;
			}
			catch (Exception ex)
			{
				Trace.WriteError("({0})", "Add", CLASSNAME, ex, new&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;.ToString());
				throw DbHelper.TranslateException(ex);
			}
		}

    /// &lt;summary&gt;
    /// String containing stored procedure name
    /// &lt;/summary&gt;
		protected string _storedProcedure_Add = "[&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_Add]";
&lt;% } //end   if (dataObject.Type != "view")%&gt;		

&lt;%  if (dataObject.GetAll( DataAttributeField.PrimaryKey).Count &gt; 0 &amp;&amp; !readOnly)
{ %&gt;
		/// &lt;summary&gt;
		/// Delete the given &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; from the database
		/// &lt;/summary&gt;
		public virtual void Delete(Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; &lt;%=GennieHelper.CamelCase(GennieHelper.Singularity(dataObject.Name))%&gt;)
		{
			try
			{
				Trace.WriteVerbose("({0})", "Delete", CLASSNAME, &lt;%=GennieHelper.CamelCase(GennieHelper.Singularity(dataObject.Name))%&gt;.ToString());

        var helper = Database.GetDbHelper();
				helper.ExecuteSPNonQuery(_storedProcedure_Delete,
				&lt;%foreach (DataAttribute attribute in dataObject)
				if (attribute.PrimaryKey)
				{%&gt;	helper.CreateInputParam("@&lt;%=GennieHelper.RemoveHungarianPrefix(attribute.Name)%&gt;", &lt;%=GennieHelper.CamelCase(GennieHelper.Singularity(dataObject.Name))%&gt;.&lt;%=GennieHelper.PascalCase( attribute.Name, true,true)%&gt;)&lt;%if (attribute != dataObject.GetAll(DataAttributeField.PrimaryKey)[dataObject.GetAll(DataAttributeField.PrimaryKey).Count -1 ]){%&gt;,
				&lt;%}}%&gt;);
			}
			catch (Exception ex)
			{
				Trace.WriteError("({0})", "Delete", CLASSNAME, ex, &lt;%=GennieHelper.CamelCase(GennieHelper.Singularity(dataObject.Name))%&gt;.ToString());
				throw DbHelper.TranslateException(ex);
			}
		}

    /// &lt;summary&gt;
    /// String containing stored procedure name
    /// &lt;/summary&gt;
		protected string _storedProcedure_Delete = "[&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_Delete]";
&lt;% } //end    if (dataObject.GetAll( DataAttributeField.PrimaryKey).Count &gt; 0)%&gt;

&lt;%
if ((dataObject.GetAll( DataAttributeField.PrimaryKey).Count &gt; 0) &amp;&amp; (dataObject.Count &gt; dataObject.GetAll( DataAttributeField.PrimaryKey).Count) &amp;&amp; !readOnly)
{
%&gt;
		/// &lt;summary&gt;
		/// Modify the given &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; in the database
		/// &lt;/summary&gt;
		public virtual void Modify(Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;)
		{
			try
			{
				Trace.WriteVerbose("({0})", "Modify", CLASSNAME, modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;.ToString());

				var helper = Database.GetDbHelper();
        int recordsAffected = helper.ExecuteSPNonQuery(_storedProcedure_Modify,
				&lt;%foreach (DataAttribute attribute in dataObject)
				
				{%&gt;	helper.CreateInputParam("@&lt;%=GennieHelper.RemoveHungarianPrefix(attribute.Name)%&gt;", modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;.&lt;%=GennieHelper.PascalCase( attribute.Name, true, true)%&gt;&lt;%
				                if(attribute.NullAllowed)
				                {
				                 if (attribute.Type != DataAttribute.DotNetTypeEnum.String)
				                 {
				                    %&gt;.HasValue ? (object)modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;.&lt;%=GennieHelper.PascalCase( attribute.Name, true,true)%&gt; : DBNull.Value&lt;%
				                 } 
				                 else 
				                 {
				                    %&gt; != null ? (object)modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;.&lt;%=GennieHelper.PascalCase( attribute.Name, true,true)%&gt; : DBNull.Value&lt;%
				                 }
				                }%&gt;)&lt;%if (attribute != dataObject.Attribute[dataObject.Count -1 ]){%&gt;,
				&lt;%}}%&gt;);

				if (recordsAffected == 0)
				{
					throw new DalNothingUpdatedException("No records were updated (Table: &lt;%=dataObject.Name%&gt;). &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;=" + modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;.ToString());
				}
			}
			catch (Exception ex)
			{
				Trace.WriteError("({0})", "Modify", CLASSNAME, ex, modified&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;.ToString());
				throw DbHelper.TranslateException(ex);
			}
		}
		
            /// &lt;summary&gt;
            /// String containing stored procedure name
            /// &lt;/summary&gt;
	    protected string _storedProcedure_Modify = "[&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_Modify]";
		
	/// &lt;summary&gt;
	/// Modify only the specified properties of the &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; 
	/// specified by:
	/// &lt;/summary&gt;
		&lt;%

		for(int i=0; i&lt;primaryKeys.Count; i++)
    {
	    DataAttribute attribute = primaryKeys[i];
	    %&gt;/// &lt;param name="&lt;%=GennieHelper.CamelCase(attribute.Name, true, true)%&gt;"&gt;PK&lt;/param&gt;&lt;%
	      }%&gt;
	/// &lt;param name="propValues"&gt;Properties to update&lt;/param&gt;
		public virtual void Modify(&lt;%
		
		for(int i=0; i&lt;primaryKeys.Count; i++)
		{
			DataAttribute attribute = primaryKeys[i];
			%&gt; &lt;%=attribute.Type%&gt; &lt;%=GennieHelper.CamelCase(attribute.Name, true, true)%&gt;, &lt;%
	      }%&gt; params KeyValuePair&lt;string,object&gt;[] propValues)
		{
			 try
      {
        Trace.WriteVerbose("(&lt;%=placeHolders%&gt;)", "Modify", CLASSNAME, &lt;%=parameters%&gt;);
        
        if (propValues.Length == 0)
        {
			Trace.WriteVerbose("No properties to update.", "Modify", CLASSNAME);
			return;
		}
        
        var helper = Database.GetDbHelper();
        StringBuilder sqlStatement =  new StringBuilder("UPDATE [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;] SET ");
        List&lt;DbParameter&gt; parameterList = new List&lt;DbParameter&gt;();
        for (int i = 0; i &lt; propValues.Length ; i++)
        { 
          sqlStatement.AppendFormat( "[{0}]=@{0}", propValues[i].Key);
          if (i&lt; propValues.Length -1)
            sqlStatement.Append( ", ");

          parameterList.Add(helper.CreateInputParam("@" + propValues[i].Key, propValues[i].Value != null ? propValues[i].Value : DBNull.Value));
          
        }
        sqlStatement.Append(" WHERE ");
        &lt;%
        for (int i= 0; i&lt;primaryKeys.Count; i++)
		{
			DataAttribute attribute = primaryKeys[i];
			%&gt; sqlStatement.Append("[&lt;%=attribute.Name%&gt;]=@&lt;%=attribute.Name%&gt;");
			     parameterList.Add( helper.CreateInputParam("@&lt;%=attribute.Name%&gt;", &lt;%=GennieHelper.CamelCase(attribute.Name, true, true)%&gt;));
			&lt;%
			if ( i &lt; primaryKeys.Count - 1)
			{%&gt;sqlStatement.Append(" AND ");&lt;%}
	      }%&gt;

              int recordsAffected = helper.ExecuteText(sqlStatement.ToString(),
                                              parameterList.ToArray());
        
        if (recordsAffected == 0)
        {
          throw new DalNothingUpdatedException(string.Format("No records were updated (Table: &lt;%=dataObject.Name%&gt;). Id=&lt;%=placeHolders%&gt;", &lt;%=parameters%&gt;));
        }

      }
      catch (Exception ex)
      {
        Trace.WriteError("(&lt;%=placeHolders%&gt;)", "Modify", CLASSNAME, ex, &lt;%=parameters%&gt;);
        throw DbHelper.TranslateException(ex);
      }

      }
&lt;% } // end  if ((dataObject.GetAll( DataAttributeField.PrimaryKey).Count &gt; 0) &amp;&amp; (dataObject.Count &gt; dataObject.GetAll( DataAttributeField.PrimaryKey).Count)) %&gt;

&lt;%  if (dataObject.GetAll( DataAttributeField.PrimaryKey).Count &gt; 0)
{%&gt;
		/// &lt;summary&gt;
		/// Get a &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; by id from the database
		/// &lt;/summary&gt;
		public virtual Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; GetById(&lt;%
		for( int i=0; i&lt;primaryKeys.Count; i++)
    	{
	    	DataAttribute attribute = primaryKeys[i];
	    	%&gt;&lt;%=attribute.Type%&gt; &lt;%=GennieHelper.CamelCase( attribute.Name, true, true)%&gt;&lt;%
		if (i &lt; primaryKeys.Count-1){ %&gt;,&lt;% }
	    }%&gt;)
		{
			DbDataReader reader = null;
			try
			{
        var helper = Database.GetDbHelper();
                
        reader = helper.ExecuteSPReader(_storedProcedure_GetById,
					&lt;%
            for( int i=0; i&lt;primaryKeys.Count; i++)
            {
				      DataAttribute attribute = primaryKeys[i];
				%&gt;helper.CreateInputParam("@&lt;%=GennieHelper.RemoveHungarianPrefix(attribute.Name)%&gt;", &lt;%=GennieHelper.CamelCase( attribute.Name, true, true)%&gt;)&lt;%
				    if (i &lt; primaryKeys.Count -1)
				    {%&gt;,
                &lt;%}
				}%&gt;);
				
				Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; result = null;

				if (reader.Read())
          result = Create&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;(reader);

				return result;
			}
			catch (Exception ex)
			{
				Trace.WriteError("&lt;%=placeHolders%&gt;", "GetById", CLASSNAME, ex, &lt;%=parameters%&gt;);
				throw DbHelper.TranslateException(ex);
			}
			finally 
			{
				if (reader != null)
					reader.Close();
			}
		}
		
    /// &lt;summary&gt;
    /// String containing stored procedure name
    /// &lt;/summary&gt;
		protected string _storedProcedure_GetById = "[&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_GetById]";
&lt;% }  //end  if (dataObject.GetAll( DataAttributeField.PrimaryKey).Count &gt; 0) %&gt;

&lt;%    foreach( DataAttribute attribute in dataObject.GetAll( DataAttributeField.ForeignKey))
        {
	        string methodName = "GetBy" + GennieHelper.PascalCase(attribute.Name, true,true);
	        string argName = GennieHelper.CamelCase( attribute.Name, true, true);
	        
        %&gt;
		/// &lt;summary&gt;
		/// Get a &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; by &lt;%=GennieHelper.RemoveHungarianPrefix(attribute.Name)%&gt; from the database
		/// &lt;/summary&gt;
		public virtual List&lt;Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;&gt; &lt;%=methodName%&gt;(&lt;%=attribute.Type%&gt; &lt;%=argName%&gt;)
		{
			DbDataReader reader = null;
			try
			{
        var helper = Database.GetDbHelper();
        reader = helper.ExecuteSPReader(_storedProcedure_GetBy&lt;%=GennieHelper.PascalCase(attribute.Name, true,false)%&gt;, 
					helper.CreateInputParam("@&lt;%=GennieHelper.RemoveHungarianPrefix(attribute.Name)%&gt;", &lt;%=argName%&gt;));
                
        List&lt;Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;&gt; result = new List&lt;Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;&gt;();
				while (reader.Read())
				{
				  result.Add(Create&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;(reader));
				}
				return result;

			}
			catch (Exception ex)
			{
				Trace.WriteError("({0})", "&lt;%=methodName%&gt;", CLASSNAME, ex, &lt;%=argName%&gt;);
				throw DbHelper.TranslateException(ex);
			}
			finally 
			{
				if (reader != null)
					reader.Close();
			}
		}
		
		/// &lt;summary&gt;
    /// String containing stored procedure name
    /// &lt;/summary&gt;
		protected string _storedProcedure_GetBy&lt;%=GennieHelper.PascalCase(attribute.Name, true,false)%&gt; = "[&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_GetBy&lt;%=GennieHelper.PascalCase(attribute.Name, true,false)%&gt;]";
		
		
&lt;% }  //end  foreach( DataAttribute attribute in dataObject.GetAll( DataAttributeField.ForeignKey))%&gt;		
		/// &lt;summary&gt;
		/// Get all &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; records from the database
		/// &lt;/summary&gt;
		public virtual List&lt;Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;&gt; GetAll()
		{
			DbDataReader reader = null;
			try
			{
        var helper = Database.GetDbHelper();
        reader = helper.ExecuteSPReader(_storedProcedure_GetAll);
								
				List&lt;Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;&gt; result = new List&lt;Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;&gt;();
				while (reader.Read())
				{
				  result.Add(Create&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;(reader));
				}
				
				return result;
			}
			catch (Exception ex)
			{
				Trace.WriteError("()", "GetAll", CLASSNAME, ex);
				throw DbHelper.TranslateException(ex);
			}
			finally 
			{
				if (reader != null)
					reader.Close();
			}
		}
		
		/// &lt;summary&gt;
    /// String containing stored procedure name
    /// &lt;/summary&gt;
		protected string _storedProcedure_GetAll = "[&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_GetAll]";
		
		
		
		/// &lt;summary&gt;
		/// Create a Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;
		/// &lt;/summary&gt;
		protected virtual Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; Create&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;(DbDataReader reader)
		{
			try
			{	
        Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; result = new Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;(
&lt;%              foreach (DataAttribute attribute in dataObject)
                {
                %&gt;&lt;% if(attribute.NullAllowed)
                            {
                                %&gt;          reader["&lt;%=attribute.Name%&gt;"] != DBNull.Value ? (&lt;%=attribute.Type%&gt;&lt;%
                                    if (attribute.Type != DataAttribute.DotNetTypeEnum.String)
                                    { 
                                        %&gt;?&lt;%
                                    }%&gt;)          reader["&lt;%=attribute.Name%&gt;"] : null&lt;%
                            }
                            else
                            {    
                                 %&gt;          (&lt;%=attribute.Type%&gt;)reader["&lt;%=attribute.Name%&gt;"]&lt;%
                            }
                            if (attribute != dataObject.Attribute[dataObject.Attribute.Count -1 ]) 
                            {%&gt;, &lt;%
                            }%&gt;
&lt;%
}
%&gt;						);
				return result;
			}
			catch (Exception ex)
			{
				Trace.WriteError("", "Create&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;", CLASSNAME, ex);
				throw DbHelper.TranslateException(ex);
			}
		}	
	}
}</Text>
        <Code />
      </Template>
      <Template>
        <Name>Actemium.ApplicationSettings.Database</Name>
        <FullName>D:\TFS\BU00\Modules\Actemium.EmptyClient\dev\Actemium.ApplicationSettings\Gennie\Templates\Actemium.ApplicationSettings.Database.template</FullName>
        <Language>CSharp</Language>
        <Text>&lt;%
    // Define the name the outputcode should be written to
    //outputFile.PathName += (@"\Database\" + dataObject.Schema );
    outputFile.PathName += (@"\Database" );
    outputFile.FileName = dataObject.Name + ".Gennie.sql";

	AttributeCollection primaryKeys = dataObject.GetAll( DataAttributeField.PrimaryKey);


// INSERT part
	String InsertParams = "";
	String InsertFields = "";
	String InsertValues = "";
	String InsertIdentity = "";

	foreach(DataAttribute attribute in dataObject)
	{
		if (InsertFields != "")
		{
			InsertFields += @",\r\n";
			InsertValues += @",\r\n";
		}
		if (InsertParams != "")
			InsertParams += @",\r\n";

		InsertParams += string.Format("\t\t@{0} {1}", GennieHelper.RemoveHungarianPrefix( attribute.Name).PadRight(32), attribute.DataBaseType);
		if (attribute.DataBaseType.IndexOf("char") &gt;= 0)
		    InsertParams += string.Format( "({0})", attribute.TypeLength);
		if (attribute.DataBaseType.IndexOf("decimal") &gt;= 0)
				InsertParams += string.Format( "({0})", attribute.TypeLength);

		if (attribute.IdentityColumn)
			InsertParams += " OUTPUT";

		if (!attribute.IdentityColumn)
		{
			InsertFields += string.Format("\t\t[{0}]", attribute.Name);
			InsertValues += string.Format("\t\t@{0}", GennieHelper.RemoveHungarianPrefix(attribute.Name));
		}
		else
		{
			InsertIdentity = string.Format("\tSELECT @{0}= SCOPE_IDENTITY();", attribute.Name);
		}
	}


// DELETE part
	string DeleteParams = "";
	string DeleteWhere = "";
	foreach(DataAttribute attribute in dataObject)
	{
		if (attribute.PrimaryKey)
		{
			if (DeleteParams != "")
				DeleteParams += @",\r\n";
			DeleteParams += string.Format("\t\t@{0} {1}", attribute.Name.PadRight(32), attribute.DataBaseType);

			if (attribute.DataBaseType.IndexOf("char") &gt;= 0)
			    DeleteParams += string.Format( "({0})", attribute.TypeLength);
			if (attribute.DataBaseType.IndexOf("decimal") &gt;= 0)
					DeleteParams += string.Format( "({0})", attribute.TypeLength);

			if (DeleteWhere != "")
				DeleteWhere += @" AND \r\n";
			DeleteWhere += String.Format("\t\t[{0}] = @{1}", attribute.Name, GennieHelper.RemoveHungarianPrefix( attribute.Name));
		}
	}

// MODIFY part
	string ModifyParams = "";
	string ModifyFields = "";
	string ModifyWhere = "";
	
	foreach(DataAttribute attribute in dataObject)
	{
		if (ModifyParams != "")
			ModifyParams += @",\r\n";	
				
		ModifyParams += string.Format("\t\t@{0} {1}", GennieHelper.RemoveHungarianPrefix(attribute.Name).PadRight(32), attribute.DataBaseType);

		if (attribute.DataBaseType.IndexOf("char") &gt;= 0)
			ModifyParams += string.Format( "({0})", attribute.TypeLength);
		if (attribute.DataBaseType.IndexOf("decimal") &gt;= 0)
			ModifyParams += string.Format( "({0})", attribute.TypeLength);

		if (attribute.PrimaryKey)
		{
		if (ModifyWhere  != "")
			ModifyWhere  += @" AND \r\n";
			ModifyWhere += string.Format( "\t\t[{0}].[{1}] = @{2}", dataObject.Name, attribute.Name, GennieHelper.RemoveHungarianPrefix(attribute.Name));

		}
		else if (!attribute.IdentityColumn)
		{
			if (ModifyFields != "")
				ModifyFields += @", \r\n";
			ModifyFields += string.Format( "\t\t[{0}].[{1}] = @{2}", dataObject.Name, attribute.Name, GennieHelper.RemoveHungarianPrefix(attribute.Name));

		}
	}


// GETBYID part
	string GetByIdParams = "";
	string GetByIdWhere = "";
	foreach(DataAttribute attribute in dataObject.GetAll( DataAttributeField.PrimaryKey))
	{
		if (GetByIdParams  != "")
			GetByIdParams  += @",\r\n";
		if (GetByIdWhere  != "")
			GetByIdWhere  += @" AND \r\n";
		GetByIdParams += string.Format( "\t\t@{0} {1}", GennieHelper.RemoveHungarianPrefix( attribute.Name).PadRight(32), attribute.DataBaseType);

		if (attribute.DataBaseType.IndexOf("char") &gt;= 0)
			GetByIdParams += string.Format( "({0})", attribute.TypeLength);
		if (attribute.DataBaseType.IndexOf("decimal") &gt;= 0)
			GetByIdParams += string.Format( "({0})", attribute.TypeLength);

		GetByIdWhere += string.Format( "\t\t[{0}].[{1}] = @{2}",
			dataObject.Name, attribute.Name, GennieHelper.RemoveHungarianPrefix( attribute.Name));
	}
%&gt;

&lt;%if (dataObject.Type != "view") { %&gt;
if exists (SELECT * FROM sys.procedures P INNER JOIN sys.schemas S ON P.schema_id=S.schema_id WHERE S.name='&lt;%=dataObject.Schema%&gt;' AND P.name='&lt;%=dataObject.Name%&gt;Gennie_Add')
	drop procedure [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_Add]
GO

/* Adds a &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; to the database */
CREATE PROCEDURE [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_Add] (
&lt;%=InsertParams%&gt;
)
AS
	INSERT INTO [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;] (
&lt;%=InsertFields%&gt;
) VALUES (
&lt;%=InsertValues%&gt;
)
&lt;%=InsertIdentity%&gt;
GO
&lt;%} // endif (dataObject.Type != "view")%&gt;


&lt;%if (dataObject.Type != "view") { %&gt;
if exists (SELECT * FROM sys.procedures P INNER JOIN sys.schemas S ON P.schema_id=S.schema_id WHERE S.name='&lt;%=dataObject.Schema%&gt;' AND P.name='&lt;%=dataObject.Name%&gt;Gennie_Delete')
	drop procedure [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_Delete]
GO

/* Deletes a &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; from the database */
CREATE PROCEDURE [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_Delete] (
&lt;%=DeleteParams%&gt;
)
AS
	DELETE FROM [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;] WHERE (
&lt;%=DeleteWhere%&gt;
)
GO
&lt;%} // endif (dataObject.Type != "view")%&gt;


&lt;%if ((dataObject.GetAll( DataAttributeField.PrimaryKey).Count &gt; 0) &amp;&amp; (dataObject.Count &gt; dataObject.GetAll( DataAttributeField.PrimaryKey).Count) &amp;&amp; (dataObject.Type != "view")) { %&gt;
if exists (SELECT * FROM sys.procedures P INNER JOIN sys.schemas S ON P.schema_id=S.schema_id WHERE S.name='&lt;%=dataObject.Schema%&gt;' AND P.name='&lt;%=dataObject.Name%&gt;Gennie_Modify')
	drop procedure [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_Modify]
GO


/* Modifies an &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; in the database */
CREATE PROCEDURE [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_Modify] (
&lt;%=ModifyParams%&gt;
)
AS
	UPDATE [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;] SET
&lt;%=ModifyFields%&gt;
	WHERE
&lt;%=ModifyWhere%&gt;
GO
&lt;%} // endif ((dataObject.GetAll( DataAttributeField.PrimaryKey).Count &gt; 0) &amp;&amp; (dataObject.Count &gt; dataObject.GetAll( DataAttributeField.PrimaryKey).Count) &amp;&amp; (dataObject.Type != "view"))%&gt;

if exists (SELECT * FROM sys.procedures P INNER JOIN sys.schemas S ON P.schema_id=S.schema_id WHERE S.name='&lt;%=dataObject.Schema%&gt;' AND P.name='&lt;%=dataObject.Name%&gt;Gennie_GetAll')
	drop procedure [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_GetAll]
GO

/* Retrieves all &lt;%=dataObject.Name%&gt; from the database */
CREATE PROCEDURE [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_GetAll]
AS
SELECT *
FROM [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;]

GO


&lt;%if (dataObject.Type != "view") { %&gt;
if exists (SELECT * FROM sys.procedures P INNER JOIN sys.schemas S ON P.schema_id=S.schema_id WHERE S.name='&lt;%=dataObject.Schema%&gt;' AND P.name='&lt;%=dataObject.Name%&gt;Gennie_GetById')
	drop procedure [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_GetById]
GO

/* Retrieves one &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; from the database using its primary key */
CREATE PROCEDURE [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_GetById] (
&lt;%=GetByIdParams%&gt;
)
AS
	SELECT *
	FROM [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;]
	WHERE
&lt;%=GetByIdWhere%&gt;
GO
&lt;%} // endif (dataObject.Type != "view")%&gt;

&lt;%
string ForeignKeyParams = "";
string ForeignKeyWhere = "";
foreach (DataAttribute attribute in dataObject)
{
    ForeignKeyParams = "";
    ForeignKeyWhere = "";
	if (attribute.ForeignKey)
	{
	    if (ForeignKeyParams != "")
	        ForeignKeyParams += @", \r\n";
	    if (ForeignKeyWhere != "")
	        ForeignKeyWhere += @" AND \r\n";
		ForeignKeyParams +=  string.Format("@{0} {1}", GennieHelper.RemoveHungarianPrefix( attribute.Name).PadRight(32), attribute.DataBaseType);
		if (attribute.DataBaseType.IndexOf("char") &gt;= 0)
		    ForeignKeyParams += string.Format( "({0})",attribute.TypeLength);
		if (attribute.DataBaseType.IndexOf("decimal") &gt;= 0)
		    ForeignKeyParams += string.Format( "({0})",attribute.TypeLength);

		ForeignKeyWhere += 	string.Format("\t\t[{0}]=@{1}", attribute.Name, GennieHelper.RemoveHungarianPrefix(attribute.Name));
		if (attribute.NullAllowed)
			ForeignKeyWhere += string.Format(" OR (@{0} is NULL AND {1} is NULL)", GennieHelper.RemoveHungarianPrefix(attribute.Name), attribute.Name);

%&gt;
if exists (SELECT * FROM sys.procedures P INNER JOIN sys.schemas S ON P.schema_id=S.schema_id WHERE S.name='&lt;%=dataObject.Schema%&gt;' AND P.name='&lt;%=dataObject.Name%&gt;Gennie_GetBy&lt;%=GennieHelper.RemoveHungarianPrefix(attribute.Name)%&gt;')
	drop procedure [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_GetBy&lt;%=GennieHelper.RemoveHungarianPrefix(attribute.Name)%&gt;]
GO

/* Retrieves &lt;%=dataObject.Name%&gt; from the database using one of it's foreign keys */
CREATE PROCEDURE [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;Gennie_GetBy&lt;%=GennieHelper.RemoveHungarianPrefix(attribute.Name)%&gt;] (
&lt;%=ForeignKeyParams%&gt;
)
AS
	SELECT *
	FROM [&lt;%=dataObject.Schema%&gt;].[&lt;%=dataObject.Name%&gt;]
	WHERE
	&lt;%=ForeignKeyWhere%&gt;
GO

&lt;%	}
}
%&gt;
</Text>
        <Code />
      </Template>
      <Template>
        <Name>Actemium.ApplicationSettings.Model</Name>
        <FullName>D:\TFS\BU00\Modules\Actemium.EmptyClient\dev\Actemium.ApplicationSettings\Gennie\Templates\Actemium.ApplicationSettings.Model.template</FullName>
        <Language>CSharp</Language>
        <Text>&lt;%
  // Define the name the outputcode should be written to
  //outputFile.PathName += (@"\Model\" + dataObject.Schema );
  outputFile.PathName += (@"\Actemium.ApplicationSettings.Model\Gennie" );
  outputFile.FileName =  GennieHelper.Singularity(dataObject.Name) + ".Gennie.cs";

  //String schemaNamespace = dataObject.Schema != "dbo" ? dataObject.Schema + "." : "";
  String schemaNamespace = "";
  
  AttributeCollection primaryKeys = dataObject.GetAll( DataAttributeField.PrimaryKey);


    string ConstructorParams = "";
    string ConstructorParams2 = "";
    string ConstructorFields = "";
    foreach(DataAttribute attribute in dataObject)
	{
	    if (ConstructorParams != "")
	    {
	        ConstructorParams += ", ";
	        ConstructorParams2 += ", ";
	        ConstructorFields += @"\r\n";
	    }
			ConstructorParams += attribute.Type;
      if (attribute.NullAllowed &amp;&amp; (attribute.Type != DataAttribute.DotNetTypeEnum.String))
        ConstructorParams += "?";
      ConstructorParams += " " + GennieHelper.CamelCase(attribute.Name, true);
      ConstructorParams2 += GennieHelper.CamelCase(attribute.Name, true, true);
      ConstructorFields += string.Format("\t\t\t_{0} = {1};", GennieHelper.CamelCase(attribute.Name, true), GennieHelper.CamelCase(attribute.Name, true));
    }

%&gt;using System;

namespace &lt;%=project["root-namespace"]%&gt;.&lt;%=schemaNamespace%&gt;Model
{

	/// &lt;summary&gt;
	/// Object model class for &lt;%=dataObject.Name%&gt;
&lt;%if (dataObject.Description != null &amp;&amp; dataObject.Description.Length &gt; 0 &amp;&amp; dataObject.Type != "view"){%&gt;	/// Description: &lt;%=dataObject.Description%&gt;
&lt;%}%&gt;	/// &lt;/summary&gt;
	[Serializable]
	public partial class &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; : &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;Gennie
  {
		private const string CLASSNAME = "&lt;%=schemaNamespace%&gt;Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;";

		public &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;() : base() { }

		public &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;(&lt;%=ConstructorParams%&gt;)
			: base(&lt;%=ConstructorParams2%&gt;)
		{

		}
  }


	/// &lt;summary&gt;
	/// Object model class for &lt;%=dataObject.Name%&gt;Gennie (Generated by Gennie)
	/// &lt;/summary&gt;
	[Serializable]
	public abstract class &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;Gennie
	{
		private const string CLASSNAME = "&lt;%=schemaNamespace%&gt;Model.&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;Gennie";


		/// &lt;summary&gt;
		/// Default constructor
		/// &lt;/summary&gt;
		public &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;Gennie()
		{
		    //Empty constructor
		}


		/// &lt;summary&gt;
		/// Constructor with all parameters
		/// &lt;/summary&gt;
		public &lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;Gennie(&lt;%=ConstructorParams%&gt;)
		{
&lt;%=ConstructorFields%&gt;
		}


&lt;%foreach (DataAttribute attribute in dataObject)
{%&gt;		/// &lt;summary&gt;
		/// Property: &lt;%=GennieHelper.RemoveHungarianPrefix(attribute.Name)%&gt;
&lt;%if (attribute.Description != string.Empty) {
%&gt;		/// Description: &lt;%=GennieHelper.RemoveHungarianPrefix(attribute.Description)%&gt;
&lt;%}  //end if (attribute.Description != string.Empty)
%&gt;		/// &lt;/summary&gt;
    public &lt;%=attribute.Type%&gt;&lt;%if (attribute.NullAllowed &amp;&amp; (attribute.Type != DataAttribute.DotNetTypeEnum.String)){%&gt;?&lt;%}%&gt; &lt;%=GennieHelper.RemoveHungarianPrefix(attribute.Name)%&gt;
		{
			set { _&lt;%=GennieHelper.CamelCase(attribute.Name, true)%&gt; = value; }
			get { return _&lt;%=GennieHelper.CamelCase(attribute.Name, true)%&gt;; }
		} protected &lt;%=attribute.Type%&gt;&lt;%if (attribute.NullAllowed &amp;&amp; (attribute.Type != DataAttribute.DotNetTypeEnum.String)){%&gt;?&lt;%}%&gt; _&lt;%=GennieHelper.CamelCase(attribute.Name, true)%&gt;;


&lt;%		}  //end foreach
%&gt;    /// &lt;summary&gt;
		/// Override the default ToString function to show all properties of the class
		/// &lt;/summary&gt;
    public override string ToString()
    {
      return string.Format("&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt;:&lt;%
	      int i=0;
				foreach(DataAttribute attribute in dataObject)
				{
			    Output.Write( attribute.Name + "={" + i.ToString() + "}");
			    if (attribute != dataObject.Attribute[dataObject.Count-1])
			      Output.Write( ", ");
					i = i + 1;
			  }
			%&gt;", 
			&lt;%
			i = 0;
			foreach(DataAttribute attribute in dataObject)
			{
			    %&gt;_&lt;%=GennieHelper.CamelCase(attribute.Name, true)%&gt;&lt;%
			    if (attribute != dataObject.Attribute[dataObject.Count-1])
			        Output.Write( ", ");
			    i = i + 1;
			}
			%&gt;);
    }
    
&lt;%  if (dataObject.Type != "view")
{  %&gt;    
		/// &lt;summary&gt;
		/// Override the default Equals function to compare class
		/// &lt;/summary&gt;    
    public override bool Equals(object obj)
    {
&lt;%
	    if (primaryKeys.Count == 1)
		  {
		    Output.WriteLine(string.Format("\t\t\tif (obj is {0})", primaryKeys[0].Type));
		    Output.WriteLine("\t\t\t{");
		    Output.WriteLine(string.Format("\t\t\t\treturn ({0} == ({1})obj);" ,GennieHelper.PascalCase(primaryKeys[0].Name, true, true),primaryKeys[0].Type ));
		    Output.WriteLine("\t\t\t}");
		    Output.WriteLine("\t\t\telse");
		  }
		  else if (primaryKeys.Count &gt; 1)
		  {
		    Output.WriteLine("\t\t\tif (obj.GetType().IsArray)");
		    Output.WriteLine("\t\t\t{");
		    Output.WriteLine(string.Format("\t\t\t\t\tif ((((object[])obj).Length == {0})",primaryKeys.Count));
		    for ( int j =0; j &lt; primaryKeys.Count;j++)
        {
          Output.WriteLine( string.Format("\t\t\t\t\t\t&amp;&amp; (((object[])obj)[{0}] is {1})",j, primaryKeys[j].Type));
        }
        Output.WriteLine( "\t\t\t)");
        Output.WriteLine( "\t\t\t{");
        Output.Write( "\t\t\treturn ( ");
        for ( int j =0; j &lt; primaryKeys.Count;j++)
        {
          if (j&gt;0)
          {
            Output.Write ( " &amp;&amp;\n                  ");
          }
          Output.Write( string.Format("(this.{0} == ({1})((object[])obj)[{2}])",GennieHelper.PascalCase(primaryKeys[j].Name, true,true), primaryKeys[j].Type,j));
        }
        Output.Write(");\n");
        Output.WriteLine( "\t\t\t\t}");
        Output.WriteLine( "\t\t\t}");
        Output.WriteLine( "\t\t\telse");
      }

      Output.WriteLine( string.Format("\t\t\t\tif (obj is {0})", GennieHelper.Singularity(dataObject.Name)));
			Output.WriteLine( string.Format("\t\t\t\t\treturn Equals(({0})obj);", GennieHelper.Singularity(dataObject.Name)));

      Output.WriteLine( "\t\t\treturn false;");%&gt;
		}


		/// &lt;summary&gt;
		/// Equals function to compare class
		/// &lt;/summary&gt;    
		public virtual bool Equals(&lt;%=GennieHelper.Singularity(dataObject.Name)%&gt; obj)
		{
			&lt;%
			string equalsExpression = "";

			foreach(DataAttribute attribute in dataObject)
	    {
		    if (attribute.PrimaryKey)
		    {
			    if (equalsExpression != "")
				    equalsExpression += " &amp;&amp; ";
			    equalsExpression += string.Format("(this.{0}.Equals((({1})obj).{0}))", GennieHelper.PascalCase(attribute.Name, true,true), GennieHelper.Singularity(dataObject.Name));
			  }
			}
			Output.WriteLine("return ({0});", equalsExpression);
%&gt;		}


		/// &lt;summary&gt;
		/// Override the default GetHashCode
		/// &lt;/summary&gt; 
		public override int GetHashCode()
		{
		  int result = 0;
		  &lt;%
		  for ( int j = 0; j &lt; primaryKeys.Count;j++)
		  {
	      Output.WriteLine("result {0}= {1}.GetHashCode();", ( j &gt; 0) ? "^" : string.Empty, GennieHelper.PascalCase(primaryKeys[j].Name, true,true));
		  }%&gt;
		  return result;
		}
		&lt;%  } //end    if (dataObject.Type != "view")%&gt;
  }
}
</Text>
        <Code />
      </Template>
    </Templates>
  </TemplateList>
  <ProgramSettings>
    <dBConnection>
      <IntegratedSecurity>false</IntegratedSecurity>
      <Password>muim3tc@</Password>
      <UserName>sa</UserName>
      <DatabaseName>ActemiumEmptyClient</DatabaseName>
      <ServerName>arches\mssql2016</ServerName>
    </dBConnection>
    <IncludeViews>true</IncludeViews>
    <References>
      <string>C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Gennie.HelperFunctions.dll</string>
    </References>
    <Usings>
      <string>System.Collections.Generic</string>
      <string>Gennie.Helpers.English</string>
    </Usings>
    <GenerateToFile>true</GenerateToFile>
    <OutputToOneFile>false</OutputToOneFile>
    <ExcludeTables>
      <string>AT.ApplicationTranslations</string>
      <string>AT.ApplicationTranslationsHistory</string>
      <string>AT.ApplicationTranslationsUpdatedOn</string>
      <string>AT.Languages</string>
      <string>UM.AccessControlItems</string>
      <string>UM.ComputerAccessControlLists</string>
      <string>UM.ComputerPropertyValues</string>
      <string>UM.Computers</string>
      <string>UM.GroupAccessControlLists</string>
      <string>UM.GroupPropertyValues</string>
      <string>UM.Groups</string>
      <string>UM.Properties</string>
      <string>UM.UserAccessControlLists</string>
      <string>UM.UserGroupLists</string>
      <string>UM.UserPropertyValues</string>
      <string>UM.Users</string>
      <string>UM.ViewComputerPropertyValues</string>
      <string>UM.ViewGroupPropertyValues</string>
      <string>UM.ViewUserPropertyValues</string>
      <string>dbo.__RefactorLog</string>
      <string>UM.SessionLogging</string>
      <string>ACT.DataTypes</string>
      <string>ACT.NameAbbreviationStyle</string>
      <string>HIST.HistoryActions</string>
      <string>HIST.HistoryKeys</string>
    </ExcludeTables>
    <AutoRefreshDatabaseItems>false</AutoRefreshDatabaseItems>
    <KeyWords>
      <KeyWord>
        <Name>readOnly</Name>
        <Value>false</Value>
      </KeyWord>
      <KeyWord>
        <Name>root-namespace</Name>
        <Value>Actemium.ApplicationSettings</Value>
      </KeyWord>
    </KeyWords>
  </ProgramSettings>
</Code_Generation>