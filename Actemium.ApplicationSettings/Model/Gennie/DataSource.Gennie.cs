using System;

namespace Actemium.ApplicationSettings.Model
{

	/// <summary>
	/// Object model class for DataSources
	/// </summary>
	[Serializable]
	public partial class DataSource : DataSourceGennie
  {
		private const string CLASSNAME = nameof(DataSource);

		public DataSource() : base() { }

		public DataSource(Int32 id, String listName, Int32 object_Id, Int32 key_Column_Id, Int32 value_Column_Id)
			: base(id, listName, object_Id, key_Column_Id, value_Column_Id)
		{

		}
  }


	/// <summary>
	/// Object model class for DataSourcesGennie (Generated by Gennie)
	/// </summary>
	[Serializable]
	public abstract class DataSourceGennie
	{
		private const string CLASSNAME = nameof(DataSourceGennie);


		/// <summary>
		/// Default constructor
		/// </summary>
		public DataSourceGennie()
		{
		    //Empty constructor
		}


		/// <summary>
		/// Constructor with all parameters
		/// </summary>
		public DataSourceGennie(Int32 id, String listName, Int32 object_Id, Int32 key_Column_Id, Int32 value_Column_Id)
		{
			_id = id;
			_listName = listName;
			_object_Id = object_Id;
			_key_Column_Id = key_Column_Id;
			_value_Column_Id = value_Column_Id;
		}


		/// <summary>
		/// Property: Id
		/// </summary>
    public Int32 Id
		{
			set { _id = value; }
			get { return _id; }
		} protected Int32 _id;


		/// <summary>
		/// Property: ListName
		/// </summary>
    public String ListName
		{
			set { _listName = value; }
			get { return _listName; }
		} protected String _listName;


		/// <summary>
		/// Property: Object_Id
		/// </summary>
    public Int32 Object_Id
		{
			set { _object_Id = value; }
			get { return _object_Id; }
		} protected Int32 _object_Id;


		/// <summary>
		/// Property: Key_Column_Id
		/// </summary>
    public Int32 Key_Column_Id
		{
			set { _key_Column_Id = value; }
			get { return _key_Column_Id; }
		} protected Int32 _key_Column_Id;


		/// <summary>
		/// Property: Value_Column_Id
		/// </summary>
    public Int32 Value_Column_Id
		{
			set { _value_Column_Id = value; }
			get { return _value_Column_Id; }
		} protected Int32 _value_Column_Id;


    /// <summary>
		/// Override the default ToString function to show all properties of the class
		/// </summary>
    public override string ToString()
    {
      return string.Format("DataSource:Id={0}, ListName={1}, Object_Id={2}, Key_Column_Id={3}, Value_Column_Id={4}", 
			_id, _listName, _object_Id, _key_Column_Id, _value_Column_Id);
    }
    
    
		/// <summary>
		/// Override the default Equals function to compare class
		/// </summary>    
    public override bool Equals(object obj)
    {
			if (obj is Int32)
			{
				return (Id == (Int32)obj);
			}
			else
				if (obj is DataSource)
					return Equals((DataSource)obj);
			return false;

		}


		/// <summary>
		/// Equals function to compare class
		/// </summary>    
		public virtual bool Equals(DataSource obj)
		{
			return ((this.Id.Equals(((DataSource)obj).Id)));
		}


		/// <summary>
		/// Override the default GetHashCode
		/// </summary> 
		public override int GetHashCode()
		{
		  int result = 0;
		  result = Id.GetHashCode();

		  return result;
		}
		
  }
}
