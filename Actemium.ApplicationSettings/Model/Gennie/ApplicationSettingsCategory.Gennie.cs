using System;

namespace Actemium.ApplicationSettings.Model
{

	/// <summary>
	/// Object model class for ApplicationSettingsCategories
	/// </summary>
	[Serializable]
	public partial class ApplicationSettingsCategory : ApplicationSettingsCategoryGennie
  {
		private const string CLASSNAME = nameof(ApplicationSettingsCategory);

		public ApplicationSettingsCategory() : base() { }

		public ApplicationSettingsCategory(Int32 applicationSettingsCategoryId, String name, String description)
			: base(applicationSettingsCategoryId, name, description)
		{

		}
  }


	/// <summary>
	/// Object model class for ApplicationSettingsCategoriesGennie (Generated by Gennie)
	/// </summary>
	[Serializable]
	public abstract class ApplicationSettingsCategoryGennie
	{
		private const string CLASSNAME = nameof(ApplicationSettingsCategoryGennie);


		/// <summary>
		/// Default constructor
		/// </summary>
		public ApplicationSettingsCategoryGennie()
		{
		    //Empty constructor
		}


		/// <summary>
		/// Constructor with all parameters
		/// </summary>
		public ApplicationSettingsCategoryGennie(Int32 applicationSettingsCategoryId, String name, String description)
		{
			_applicationSettingsCategoryId = applicationSettingsCategoryId;
			_name = name;
			_description = description;
		}


		/// <summary>
		/// Property: ApplicationSettingsCategoryId
		/// </summary>
    public Int32 ApplicationSettingsCategoryId
		{
			set { _applicationSettingsCategoryId = value; }
			get { return _applicationSettingsCategoryId; }
		} protected Int32 _applicationSettingsCategoryId;


		/// <summary>
		/// Property: Name
		/// </summary>
    public String Name
		{
			set { _name = value; }
			get { return _name; }
		} protected String _name;


		/// <summary>
		/// Property: Description
		/// </summary>
    public String Description
		{
			set { _description = value; }
			get { return _description; }
		} protected String _description;


    /// <summary>
		/// Override the default ToString function to show all properties of the class
		/// </summary>
    public override string ToString()
    {
      return string.Format("ApplicationSettingsCategory:ApplicationSettingsCategoryId={0}, Name={1}, Description={2}", 
			_applicationSettingsCategoryId, _name, _description);
    }
    
    
		/// <summary>
		/// Override the default Equals function to compare class
		/// </summary>    
    public override bool Equals(object obj)
    {
			if (obj is Int32)
			{
				return (ApplicationSettingsCategoryId == (Int32)obj);
			}
			else
				if (obj is ApplicationSettingsCategory)
					return Equals((ApplicationSettingsCategory)obj);
			return false;

		}


		/// <summary>
		/// Equals function to compare class
		/// </summary>    
		public virtual bool Equals(ApplicationSettingsCategory obj)
		{
			return ((this.ApplicationSettingsCategoryId.Equals(((ApplicationSettingsCategory)obj).ApplicationSettingsCategoryId)));
		}


		/// <summary>
		/// Override the default GetHashCode
		/// </summary> 
		public override int GetHashCode()
		{
		  int result = 0;
		  result = ApplicationSettingsCategoryId.GetHashCode();

		  return result;
		}
		
  }
}
