using System;

namespace Actemium.L3IC.OrderManager.Model
{

	/// <summary>
	/// Object model class for Materials
	/// Description: The raw and finished goods materials for the production
	/// </summary>
	[Serializable]
	public partial class Material : MaterialGennie
  {
		private const string CLASSNAME = nameof(Material);

		public Material() : base() { }

		public Material(Int32 id, Int32 materialGroupId, Int32 code, String description)
			: base(id, materialGroupId, code, description)
		{

		}
  }


	/// <summary>
	/// Object model class for MaterialsGennie (Generated by Gennie)
	/// </summary>
	[Serializable]
	public abstract class MaterialGennie
	{
		private const string CLASSNAME = nameof(MaterialGennie);


		/// <summary>
		/// Default constructor
		/// </summary>
		public MaterialGennie()
		{
		    //Empty constructor
		}


		/// <summary>
		/// Constructor with all parameters
		/// </summary>
		public MaterialGennie(Int32 id, Int32 materialGroupId, Int32 code, String description)
		{
			_id = id;
			_materialGroupId = materialGroupId;
			_code = code;
			_description = description;
		}


		/// <summary>
		/// Property: Id
		/// Description: (AutoIdentity) Unique identification of the material
		/// </summary>
    public Int32 Id
		{
			set { _id = value; }
			get { return _id; }
		} protected Int32 _id;


		/// <summary>
		/// Property: MaterialGroupId
		/// Description: (FK to MaterialGroups) The material group this material belongs to
		/// </summary>
    public Int32 MaterialGroupId
		{
			set { _materialGroupId = value; }
			get { return _materialGroupId; }
		} protected Int32 _materialGroupId;


		/// <summary>
		/// Property: Code
		/// Description: Unique key of this material
		/// </summary>
    public Int32 Code
		{
			set { _code = value; }
			get { return _code; }
		} protected Int32 _code;


		/// <summary>
		/// Property: Description
		/// Description: Description of this material
		/// </summary>
    public String Description
		{
			set { _description = value; }
			get { return _description; }
		} protected String _description;


    /// <summary>
		/// Override the default ToString function to show all properties of the class
		/// </summary>
    public override string ToString()
    {
      return string.Format("Material:Id={0}, MaterialGroupId={1}, Code={2}, Description={3}", 
			_id, _materialGroupId, _code, _description);
    }
    
    
		/// <summary>
		/// Override the default Equals function to compare class
		/// </summary>    
    public override bool Equals(object obj)
    {
			if (obj is Int32)
			{
				return (Id == (Int32)obj);
			}
			else
				if (obj is Material)
					return Equals((Material)obj);
			return false;

		}


		/// <summary>
		/// Equals function to compare class
		/// </summary>    
		public virtual bool Equals(Material obj)
		{
			return ((this.Id.Equals(((Material)obj).Id)));
		}


		/// <summary>
		/// Override the default GetHashCode
		/// </summary> 
		public override int GetHashCode()
		{
		  int result = 0;
		  result = Id.GetHashCode();

		  return result;
		}
		
  }
}
