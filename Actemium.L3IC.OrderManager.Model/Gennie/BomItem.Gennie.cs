using System;

namespace Actemium.L3IC.OrderManager.Model
{

	/// <summary>
	/// Object model class for BomItems
	/// Description: Items that are on the Bill Of Material
	/// </summary>
	[Serializable]
	public partial class BomItem : BomItemGennie
  {
		private const string CLASSNAME = nameof(BomItem);

		public BomItem() : base() { }

		public BomItem(Int32 id, Int32 orderId, Int32 materialId, Decimal quantity, String uOM)
			: base(id, orderId, materialId, quantity, uOM)
		{

		}
  }


	/// <summary>
	/// Object model class for BomItemsGennie (Generated by Gennie)
	/// </summary>
	[Serializable]
	public abstract class BomItemGennie
	{
		private const string CLASSNAME = nameof(BomItemGennie);


		/// <summary>
		/// Default constructor
		/// </summary>
		public BomItemGennie()
		{
		    //Empty constructor
		}


		/// <summary>
		/// Constructor with all parameters
		/// </summary>
		public BomItemGennie(Int32 id, Int32 orderId, Int32 materialId, Decimal quantity, String uOM)
		{
			_id = id;
			_orderId = orderId;
			_materialId = materialId;
			_quantity = quantity;
			_uOM = uOM;
		}


		/// <summary>
		/// Property: Id
		/// Description: (AutoIdentity) Unique identification of the BOM item
		/// </summary>
    public Int32 Id
		{
			set { _id = value; }
			get { return _id; }
		} protected Int32 _id;


		/// <summary>
		/// Property: OrderId
		/// Description: (FK to Orders) The order this BOM item is related to
		/// </summary>
    public Int32 OrderId
		{
			set { _orderId = value; }
			get { return _orderId; }
		} protected Int32 _orderId;


		/// <summary>
		/// Property: MaterialId
		/// Description: (FK to Materials) The material of this BOM item
		/// </summary>
    public Int32 MaterialId
		{
			set { _materialId = value; }
			get { return _materialId; }
		} protected Int32 _materialId;


		/// <summary>
		/// Property: Quantity
		/// Description: The quantity needed of this BOM item
		/// </summary>
    public Decimal Quantity
		{
			set { _quantity = value; }
			get { return _quantity; }
		} protected Decimal _quantity;


		/// <summary>
		/// Property: UOM
		/// Description: Unit Of Measurement of this BOM item
		/// </summary>
    public String UOM
		{
			set { _uOM = value; }
			get { return _uOM; }
		} protected String _uOM;


    /// <summary>
		/// Override the default ToString function to show all properties of the class
		/// </summary>
    public override string ToString()
    {
      return string.Format("BomItem:Id={0}, OrderId={1}, MaterialId={2}, Quantity={3}, UOM={4}", 
			_id, _orderId, _materialId, _quantity, _uOM);
    }
    
    
		/// <summary>
		/// Override the default Equals function to compare class
		/// </summary>    
    public override bool Equals(object obj)
    {
			if (obj is Int32)
			{
				return (Id == (Int32)obj);
			}
			else
				if (obj is BomItem)
					return Equals((BomItem)obj);
			return false;

		}


		/// <summary>
		/// Equals function to compare class
		/// </summary>    
		public virtual bool Equals(BomItem obj)
		{
			return ((this.Id.Equals(((BomItem)obj).Id)));
		}


		/// <summary>
		/// Override the default GetHashCode
		/// </summary> 
		public override int GetHashCode()
		{
		  int result = 0;
		  result = Id.GetHashCode();

		  return result;
		}
		
  }
}
