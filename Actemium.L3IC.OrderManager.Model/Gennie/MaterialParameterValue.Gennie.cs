using System;

namespace Actemium.L3IC.OrderManager.Model
{

	/// <summary>
	/// Object model class for MaterialParameterValues
	/// Description: The value of the material specific parameters
	/// </summary>
	[Serializable]
	public partial class MaterialParameterValue : MaterialParameterValueGennie
  {
		private const string CLASSNAME = nameof(MaterialParameterValue);

		public MaterialParameterValue() : base() { }

		public MaterialParameterValue(Int32 id, Int32 materialId, Int32 materialParameterId, String value)
			: base(id, materialId, materialParameterId, value)
		{

		}
  }


	/// <summary>
	/// Object model class for MaterialParameterValuesGennie (Generated by Gennie)
	/// </summary>
	[Serializable]
	public abstract class MaterialParameterValueGennie
	{
		private const string CLASSNAME = nameof(MaterialParameterValueGennie);


		/// <summary>
		/// Default constructor
		/// </summary>
		public MaterialParameterValueGennie()
		{
		    //Empty constructor
		}


		/// <summary>
		/// Constructor with all parameters
		/// </summary>
		public MaterialParameterValueGennie(Int32 id, Int32 materialId, Int32 materialParameterId, String value)
		{
			_id = id;
			_materialId = materialId;
			_materialParameterId = materialParameterId;
			_value = value;
		}


		/// <summary>
		/// Property: Id
		/// Description: (AutoIdentity) Unique identification of the material parameter value
		/// </summary>
    public Int32 Id
		{
			set { _id = value; }
			get { return _id; }
		} protected Int32 _id;


		/// <summary>
		/// Property: MaterialId
		/// Description: (FK to Materials) The material this parameter value belongs to
		/// </summary>
    public Int32 MaterialId
		{
			set { _materialId = value; }
			get { return _materialId; }
		} protected Int32 _materialId;


		/// <summary>
		/// Property: MaterialParameterId
		/// Description: (FK to MaterialParameters) The material parameter of this material parameter value
		/// </summary>
    public Int32 MaterialParameterId
		{
			set { _materialParameterId = value; }
			get { return _materialParameterId; }
		} protected Int32 _materialParameterId;


		/// <summary>
		/// Property: Value
		/// Description: The actual value of this material specific parameter
		/// </summary>
    public String Value
		{
			set { _value = value; }
			get { return _value; }
		} protected String _value;


    /// <summary>
		/// Override the default ToString function to show all properties of the class
		/// </summary>
    public override string ToString()
    {
      return string.Format("MaterialParameterValue:Id={0}, MaterialId={1}, MaterialParameterId={2}, Value={3}", 
			_id, _materialId, _materialParameterId, _value);
    }
    
    
		/// <summary>
		/// Override the default Equals function to compare class
		/// </summary>    
    public override bool Equals(object obj)
    {
			if (obj is Int32)
			{
				return (Id == (Int32)obj);
			}
			else
				if (obj is MaterialParameterValue)
					return Equals((MaterialParameterValue)obj);
			return false;

		}


		/// <summary>
		/// Equals function to compare class
		/// </summary>    
		public virtual bool Equals(MaterialParameterValue obj)
		{
			return ((this.Id.Equals(((MaterialParameterValue)obj).Id)));
		}


		/// <summary>
		/// Override the default GetHashCode
		/// </summary> 
		public override int GetHashCode()
		{
		  int result = 0;
		  result = Id.GetHashCode();

		  return result;
		}
		
  }
}
