using System;

namespace Actemium.L3IC.OrderManager.Model
{

	/// <summary>
	/// Object model class for Orders
	/// Description: All production orders
	/// </summary>
	[Serializable]
	public partial class Order : OrderGennie
  {
		private const string CLASSNAME = nameof(Order);

		public Order() : base() { }

		public Order(Int32 id, Int32 orderMessageId, String code, Int32 materialId, Int32 resourceId, Decimal targetQuantity, String uOM, DateTime plannedStartDate, DateTime? startDate, DateTime? finishDate)
			: base(id, orderMessageId, code, materialId, resourceId, targetQuantity, uOM, plannedStartDate, startDate, finishDate)
		{

		}
  }


	/// <summary>
	/// Object model class for OrdersGennie (Generated by Gennie)
	/// </summary>
	[Serializable]
	public abstract class OrderGennie
	{
		private const string CLASSNAME = nameof(OrderGennie);


		/// <summary>
		/// Default constructor
		/// </summary>
		public OrderGennie()
		{
		    //Empty constructor
		}


		/// <summary>
		/// Constructor with all parameters
		/// </summary>
		public OrderGennie(Int32 id, Int32 orderMessageId, String code, Int32 materialId, Int32 resourceId, Decimal targetQuantity, String uOM, DateTime plannedStartDate, DateTime? startDate, DateTime? finishDate)
		{
			_id = id;
			_orderMessageId = orderMessageId;
			_code = code;
			_materialId = materialId;
			_resourceId = resourceId;
			_targetQuantity = targetQuantity;
			_uOM = uOM;
			_plannedStartDate = plannedStartDate;
			_startDate = startDate;
			_finishDate = finishDate;
		}


		/// <summary>
		/// Property: Id
		/// Description: (AutoIdentity) Unique identification of the order
		/// </summary>
    public Int32 Id
		{
			set { _id = value; }
			get { return _id; }
		} protected Int32 _id;


		/// <summary>
		/// Property: OrderMessageId
		/// Description: (FK to Orders) The order message (Header) of this order
		/// </summary>
    public Int32 OrderMessageId
		{
			set { _orderMessageId = value; }
			get { return _orderMessageId; }
		} protected Int32 _orderMessageId;


		/// <summary>
		/// Property: Code
		/// Description: Unique process order code key of this order
		/// </summary>
    public String Code
		{
			set { _code = value; }
			get { return _code; }
		} protected String _code;


		/// <summary>
		/// Property: MaterialId
		/// Description: (FK to Materials) The finished goods material of this order
		/// </summary>
    public Int32 MaterialId
		{
			set { _materialId = value; }
			get { return _materialId; }
		} protected Int32 _materialId;


		/// <summary>
		/// Property: ResourceId
		/// Description: (FK to Resources) The resource this order must be produced on
		/// </summary>
    public Int32 ResourceId
		{
			set { _resourceId = value; }
			get { return _resourceId; }
		} protected Int32 _resourceId;


		/// <summary>
		/// Property: TargetQuantity
		/// Description: The desired quantity to produce for this order
		/// </summary>
    public Decimal TargetQuantity
		{
			set { _targetQuantity = value; }
			get { return _targetQuantity; }
		} protected Decimal _targetQuantity;


		/// <summary>
		/// Property: UOM
		/// Description: The Unit Of Measurement belonging to the target quantity of this order
		/// </summary>
    public String UOM
		{
			set { _uOM = value; }
			get { return _uOM; }
		} protected String _uOM;


		/// <summary>
		/// Property: PlannedStartDate
		/// Description: The desired date and time to start production of this order 
		/// </summary>
    public DateTime PlannedStartDate
		{
			set { _plannedStartDate = value; }
			get { return _plannedStartDate; }
		} protected DateTime _plannedStartDate;


		/// <summary>
		/// Property: StartDate
		/// Description: The actual date and time the production of this order started
		/// </summary>
    public DateTime? StartDate
		{
			set { _startDate = value; }
			get { return _startDate; }
		} protected DateTime? _startDate;


		/// <summary>
		/// Property: FinishDate
		/// Description: The actual date and time the production of this order ended
		/// </summary>
    public DateTime? FinishDate
		{
			set { _finishDate = value; }
			get { return _finishDate; }
		} protected DateTime? _finishDate;


    /// <summary>
		/// Override the default ToString function to show all properties of the class
		/// </summary>
    public override string ToString()
    {
      return string.Format("Order:Id={0}, OrderMessageId={1}, Code={2}, MaterialId={3}, ResourceId={4}, TargetQuantity={5}, UOM={6}, PlannedStartDate={7}, StartDate={8}, FinishDate={9}", 
			_id, _orderMessageId, _code, _materialId, _resourceId, _targetQuantity, _uOM, _plannedStartDate, _startDate, _finishDate);
    }
    
    
		/// <summary>
		/// Override the default Equals function to compare class
		/// </summary>    
    public override bool Equals(object obj)
    {
			if (obj is Int32)
			{
				return (Id == (Int32)obj);
			}
			else
				if (obj is Order)
					return Equals((Order)obj);
			return false;

		}


		/// <summary>
		/// Equals function to compare class
		/// </summary>    
		public virtual bool Equals(Order obj)
		{
			return ((this.Id.Equals(((Order)obj).Id)));
		}


		/// <summary>
		/// Override the default GetHashCode
		/// </summary> 
		public override int GetHashCode()
		{
		  int result = 0;
		  result = Id.GetHashCode();

		  return result;
		}
		
  }
}
